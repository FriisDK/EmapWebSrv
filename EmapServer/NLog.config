<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="true"
      internalLogLevel="Warn"
      internalLogFile="log/nlog-internal.log">

  <variable name="relativelogpath" value="log" />
  <variable name="timeinlog" value="${date:format=HH\:mm\:ss.fff}" />
  <variable name="timeinfile" value="${date:format=yyyyMMdd}" />
  <variable name="timemsgfile" value="${date:format=yyyyMMddHHmmss}" />
  <variable name="format.normal" value="${timeinlog} ${level:upperCase=true} ${callsite:includSourcePath=true}(${callsite-linenumber}) ${message} "   />
  <variable name="format.error" value="${format.normal} (${stacktrace:topFrames=10:format=raw}) ${exception:format=ToString}"  />
  <variable name="format.message" value="${timeinlog} ${message}" />
  <variable name="mail.message" value="${longdate}|${level:uppercase=true}${newline}${newline}${message}" />

  <targets>
    <target xsi:type="NLogViewer" name="Viewer" address="udp://127.0.0.1:9999"/>
    <target name="Debugfile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${relativelogpath}/debug_${timeinfile}.log" layout="${format.normal}" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="90" keepFileOpen="false" />
    </target>
    <target name="Messagefile" xsi:type="File" fileName="MessageLogFile" layout="${format.message}" keepFileOpen="false" />
    <target name="SlotMessagefile" xsi:type="File" fileName="${relativelogpath}/slot_${timemsgfile}.log" layout="${format.message}" keepFileOpen="false" />
    <target name="RequestResponse" xsi:type="File" fileName="${relativelogpath}/requestresponse_${timemsgfile}.log" layout="${format.message}" keepFileOpen="false" />
    <target name="Tracefile" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard" >
      <target xsi:type="FilteringWrapper"  condition="length('${exception}')>0" >
        <target xsi:type="File" name="filelog" fileName="${relativelogpath}/trace_${timeinfile}.log" layout="${format.error}" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="360"  keepFileOpen="false" />
      </target>
    </target>
    <target xsi:type="ColoredConsole" name="Consoletarget" layout="${longdate}|${pad:padding=5:inner=${level:uppercase=true}}|${logger}|${message}" useDefaultRowHighlightingRules="True" errorStream="False" detectConsoleAvailable="True">
      <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
      <highlight-row condition="level == LogLevel.Info" foregroundColor="Gray" />
      <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
      <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
      <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
    </target>
  </targets>
  <rules>
    <logger name="*" minlevel="Trace" writeTo="Debugfile,Viewer,Consoletarget">
      <filters>
        <when condition="equals('${logger}','Messagelogger')" action="Ignore" />
        <when condition="equals('${logger}','RequestResponseLogger')" action="Ignore" />
        <when condition="contains('${message}','refreshedtick')" action="Ignore" />
      </filters>
    </logger>
    <logger name="*" minlevel="Error" writeTo="Tracefile" />
  </rules>
</nlog>
